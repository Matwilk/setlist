<?php
/**
 * Implements hook_schema().
 */
function setlist_schema() {

  $schema = array();

  $schema['setlist_musicians'] = array(
    'description' => 'The base table for the Musician entity',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key of the Musician entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Musician name.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['setlist_instruments'] = array(
    'description' => 'The base table for the Instrument entity',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key of the Instrument entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Instrument name.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  $schema['setlist_songs'] = array(
    'description' => 'The base table for the Songs entity',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key of the Songs entity',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'name' => array(
        'description' => 'Song name.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'genre' => array(
        'description' => 'Song genre.',
        'type' => 'varchar',
        'length' => 32,
        'not null' => FALSE,
      ),
      'year' => array(
        'year' => 'Song year.',
        'type' => 'int',
        'length' => 5,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('id'),
  );

  return $schema;
}
 
/**
 * Implements hook_install().
 */
function setlist_install() {
  $t = get_t();

  /** Create the field_player field and instance */
  
  if (!field_info_field('field_player')) {
    field_info_cache_clear();

    $field = array(
      'field_name' => 'field_player',
      'type' => 'setlist_player',
      'cardinality' => -1
    );
    field_create_field($field);
    
    $instance = array(
      'field_name' => 'field_player',
      'entity_type' => 'song',
      'bundle' => 'song',
      'label' => $t('Players'),
      'required' => true,
      'widget' => array(
        'type' => 'setlist_player_widget'
      ),
      'settings' => array(
        'target_type' => 'musician',
        'handler_settings' => array('target_bundles' => NULL),
      ),
      'display' => array(
        'default' => array('label' => 'inline', 'type' => 'setlist_player_formatter'),
      ),
    );

    field_create_instance($instance);
    
    /** Create the setlist content type */
    
    // define the node type
    $setlist = array(
      'type' => 'setlist',
      'name' => $t('Setlist'),// Display name of the content type
      'base' => 'node_content',
      'title_label' => $t('Set'),
      'description' => $t('To define the set.'),
      'custom' => TRUE,
    );

    // set other node defaults not declared above
    $content_type = node_type_set_defaults($setlist);

    // save the content type
    node_type_save($content_type);
    
    //** Attach fields to setlist content type */
    
    $date_field = array(
      'field_name' => 'setlist_date',
      'type' => 'datetime',
      'cardinality' => 1,
    );
    field_create_field($date_field);
  
    $date_instance = array(
        'field_name' => 'setlist_date',
        'label' => $t('Date'),
        'widget' => array(
          'type' => 'date_select',
          'settings' => array(
            'increment' => 15,
            // The number of years to go back and forward in drop-down year selectors.
            'year_range' => '2010:+1',

            'input_format' => date_default_format('date_select'),
            'text_parts' => array(),
            'label_position' => 'above',
            'repeat_collapsed' => 0,     
          ),     
        ),
        'entity_type' => 'node',
        'bundle' => 'setlist',
    );
    field_create_instance($date_instance);
    
    $song_field = array(
      'field_name' => 'song_reference',
      'type' => 'entityreference',
      'settings' => array(
        'target_type' => 'song',
        'handler_settings' => array('target_bundles' => NULL),
      ),
      'cardinality' => -1,
      'translatable' => FALSE,
    );
    field_create_field($song_field);
      
    $song_instance = array(
      'field_name' => 'song_reference',
      'entity_type' => 'node',
      'bundle' => 'setlist',
      'label' => $t('Songs'),
      'required' => TRUE,
      'widget' => array(
        'active' => 1,
        'module' => 'entityreference',
        'type' => 'options_buttons'
      ),
      'settings' => array(
        'target_type' => 'song',
        'handler_settings' => array('target_bundles' => NULL),
      ),
      'cardinality' => -1,
      'display' => array(
        'default' => array('label' => 'inline', 'type' => 'entityreference_label'),
      ),
    );

    field_create_instance($song_instance); 
  }
}

/**
 * Implements hook_uninstall().
 */
function setlist_uninstall() {
  
  /* Delete the data for the types */
  /*$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  
  $result = db_query($sql, array(':type' => 'setlist'));
  dpm($result);
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);
  
  $result = db_query($sql, array(':type' => 'setlist_musicians'));
  dpm($result);
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);

  $result = db_query($sql, array(':type' => 'setlist_instruments'));
  dpm($result);
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);
  
  $result = db_query($sql, array(':type' => 'setlist_songs'));
  dpm($result);
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);

  $result = db_query($sql, array(':type' => 'field_player'));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);
*/

  /* Delete the custom field */
  
  $field = array(
    'field_name' => 'field_player',
    'type' => 'setlist_player',
    'cardinality' => -1
  );

  field_delete_field($field);

  $date_field = array(
    'field_name' => 'setlist_date',
    'type' => 'datetime',
    'cardinality' => 1,
  );
  field_delete_field($date_field);
  
  /* Delete the custom node */
  
  node_type_delete('setlist');
  
}

/**
 * Implements hook_field_schema().
 */
function setlist_field_schema($field) {
  
  $columns = array(
    'musician' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE),
    'instrument' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE),
  );
  
  return array(
    'columns' => $columns,
    'indexes' => array(),
  );  
}
